buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            name = "jitpack.io"
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'idea'
apply plugin: 'maven'

version = '0.1-beta'
group project.modGroup //http://maven.apache.org/guides/mini/guide-naming-conventions.html
project.version = '1.8.5'

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = project.forgeVersion
    mappings = project.mcpVersion
    runDir = 'run'
    makeObfSourceJar = false
}


repositories {
    mavenCentral()
    mavenCentral()
    google()
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/maven'
    }
    maven {
        name = 'jitpack.io'
        url = 'https://jitpack.io'
    }
}


dependencies {
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task copyShadowJar(type: Copy, dependsOn: subprojects.jar) {
    from(project.shadowJar)
    if (System.getProperty('pb.jar.dir') != null) {
        into project.file(System.getProperty('pb.jar.dir'))
    } else {
        into project.file('build/dummy')
    }
}

shadowJar {
    finalizedBy(copyShadowJar)
    dependencies {
        include(dependency('org.spongepowered:mixin'))
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    exclude '**/*module-info.class'
    exclude '**/META-INF/versions/9/**'
    classifier = 'release'
}

mixin {
    defaultObfuscationEnv searge
    //noinspection GroovyAssignabilityCheck
    add sourceSets.main, 'mixins.meowhack.refmap.json'
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes(
                'Manifest-Version': 1.0,
                'FMLCorePluginContainsFMLMod': 'true',
                'ForceLoadAsMod': 'true',
        )
    }
}

build.dependsOn(shadowJar)